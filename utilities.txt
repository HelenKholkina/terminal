1) sed - потоковый редактор текста, работающий по принципу замены. Можно использовать для поиска,
вставки, замены и удаления фрагментов в файле, не открывая сам файл.
Синтаксис: sed опции команды имя_файла
            А. Опции: 
        -e - команды надо выполнять для редактирования
	-f - прочитать команды редактирования из файла
	-i - сделать резервную копию перед редактированием
	    Б. Команлы:
	-q - завершает работу сценария
	-d - удаляет буфер шаблона и начинает следующий сценарий
	-p - вывести содержимое буфера шаблона
	-s/что_заменить/на_что_заменить/опции - замена символов, поддерживаются регулярные выражения
	-y/какой_символ_заменить/на_какой_символ_заменять
	-w - записать содержимое буфера шаблона в файл
	    В. Для реализации нужно указать, где именно производить замену-адрес:
	номер - номер строки, в которой выполняется команда
	номер~шаг - команда выполняется в строке ЭномерЭ и в следующих строках с указанным шагом
	(3~5 - сначала в 3-ей строчке, затем в 8-ой и т.д.)
	$ - последняя строка
	/регулярное_выражение/ - строки, которые будут входить в регулярное выражение
	номер1, номер2 - начинать со строки номер1 и закончить на строке номер2
	номер, /регулярное_выражение/
	номер, +кол-во - начинать со строки номер и последующие строки количеством кол-во
Адреса можно разделить , (запятой). Если адрес не указан, то команды для все строк.
*Синтаксис регулярных выражений:
        * - любой символ, любое количество
        \+ - как *, только один символ или больше
	\? - нет или один символ
	\{i\} - любой символ в количестве i
	\{i,j\} - любой символ в количестве от i до j
        \{i,\} - любой символ от i и больше

Примеры:
1. "sed -n '5,10p' /etc/group/" - вывести (p) из файла /etc/group строки с пятой по десятую ('5,10...')
так, чтобы не выводить содержимое буфера (-n), чтобы вывести только то, что нам надо. *команда одна,
поэтому -e можно опустить.
2. "sed '1,20d' /etc/group" - вывести всееее, кроме строки с 1 по 20 ('1,20...') 
3. "sed 's/root/losst/g' /etc/group" - заменить (g) вхождения слова root на losst ('s/root/losst/...')
4. "sed '1,10 s/o/1000/g' /etc/group" - заменить (g) вхождения 0 на 1000 (...s/o/1000/...),
только в строках 1-10('1,10...')


2) xargs - объединяет команды, вывод предыдущей команды можно передать в аргументы следующей.
Синтаксис: первая_команда |xargs опции вторая_команда аргументы.
Пример: "ls ~/Изображения | xargs -t echo" - выводит (команда echo) все имена изображений 
из папки ~/Изображения


3) awk - для обработки и фильтрации текста. Утилита читает документ по одной строке за раз, 
выполняет указанные вами действия и выводит результат на стандартный вывод. 
Синтаксис: awk опции 'условие{действие}' (через пробел можно добавить еще условие{действие})
Действия: print - вывод чего-либо в стандартный поток вывода
          length - возвращает длину строки
	  tolower - перводит строку в нижний регистр
Пример: "echo 'one two three' |awk '{print $2}'" - вводим текст (echo), но из него нужно только
второе слово, поэтому результат "two"
